//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LunaParkEntities : DbContext
    {
        public LunaParkEntities()
            : base("name=LunaParkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccessLevel> AccessLevel { get; set; }
        public virtual DbSet<Attraction> Attraction { get; set; }
        public virtual DbSet<AttractionStatus> AttractionStatus { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<FavoriteAttraction> FavoriteAttraction { get; set; }
        public virtual DbSet<Message> Message { get; set; }
        public virtual DbSet<QueuePerUser> QueuePerUser { get; set; }
        public virtual DbSet<Queues> Queues { get; set; }
        public virtual DbSet<Rate> Rate { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        [DbFunction("LunaParkEntities", "FindQueuesWithNullTickets")]
        public virtual IQueryable<FindQueuesWithNullTickets_Result> FindQueuesWithNullTickets(Nullable<System.DateTime> timeNow, Nullable<int> atrractionId)
        {
            var timeNowParameter = timeNow.HasValue ?
                new ObjectParameter("TimeNow", timeNow) :
                new ObjectParameter("TimeNow", typeof(System.DateTime));
    
            var atrractionIdParameter = atrractionId.HasValue ?
                new ObjectParameter("AtrractionId", atrractionId) :
                new ObjectParameter("AtrractionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindQueuesWithNullTickets_Result>("[LunaParkEntities].[FindQueuesWithNullTickets](@TimeNow, @AtrractionId)", timeNowParameter, atrractionIdParameter);
        }
    
        public virtual int LastQueuePerAttractionProc(Nullable<int> attractionId)
        {
            var attractionIdParameter = attractionId.HasValue ?
                new ObjectParameter("AttractionId", attractionId) :
                new ObjectParameter("AttractionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LastQueuePerAttractionProc", attractionIdParameter);
        }
    
        public virtual int ResetQueues()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetQueues");
        }
    
        public virtual ObjectResult<UpdateMaxPeopleFromCurrHour_Result> UpdateMaxPeopleFromCurrHour(Nullable<System.DateTime> timeNow, Nullable<int> attractionId, Nullable<int> attractionMaxPeople, Nullable<int> maxPeopleNow)
        {
            var timeNowParameter = timeNow.HasValue ?
                new ObjectParameter("TimeNow", timeNow) :
                new ObjectParameter("TimeNow", typeof(System.DateTime));
    
            var attractionIdParameter = attractionId.HasValue ?
                new ObjectParameter("AttractionId", attractionId) :
                new ObjectParameter("AttractionId", typeof(int));
    
            var attractionMaxPeopleParameter = attractionMaxPeople.HasValue ?
                new ObjectParameter("AttractionMaxPeople", attractionMaxPeople) :
                new ObjectParameter("AttractionMaxPeople", typeof(int));
    
            var maxPeopleNowParameter = maxPeopleNow.HasValue ?
                new ObjectParameter("MaxPeopleNow", maxPeopleNow) :
                new ObjectParameter("MaxPeopleNow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateMaxPeopleFromCurrHour_Result>("UpdateMaxPeopleFromCurrHour", timeNowParameter, attractionIdParameter, attractionMaxPeopleParameter, maxPeopleNowParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
